2) How many possible ways are to shuffle given number of playing cards?.
Input Size : |N| <= 1000000
Sample Testcase :
INPUT
7
OUTPUT
5040

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=parseInt(userInput[0]);
  let num=1;
  for(let i=a;i>1;i--){
      num*=i;
  }
  console.log(num);
});
---------------------------------------------------------------------------------------------

6) Given a number 'N' print the sum of each digit to the power of number of digits in given input.
Example :
Input => 1234
=> ( 1 ^ 4 ) + ( 2 ^ 4 ) + ( 3 ^ 4 ) + ( 4 ^ 4 )
=> 1 + 16 + 81 + 256
Output => 354
N <=100000000000
Sample Testcase :
INPUT
1234
OUTPUT
354

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=userInput[0].split("").map(Number);
  let total=0;
  for(let i=0;i<a.length;i++){
      total+=Math.pow(a[i],a.length);
  }
  console.log(total);
});
---------------------------------------------------------------------------------------------
7) Given a string S ,print the vowels first and then consonants in the same order as they have occurred in the string.
Input Size : N <= 10000
Sample Testcase :
INPUT
GuVI
OUTPUT
uIGV

CODE:
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let n=userInput[0];
let arr=[];
for(let i=0;i<n.length;i++){
    if(n[i]==='a' ||n[i]==='e' ||n[i]==='i' ||n[i]==='o' ||n[i]==='u' ||n[i]==='A' ||n[i]==='E' ||n[i]==='I' ||n[i]==='O' ||n[i]==='U'){
        arr.push(n[i]);
    }}
for(let i=0;i<n.length;i++){
    if(n[i]!=='a' &&n[i]!=='e' &&n[i]!=='i' &&n[i]!=='o' &&n[i]!=='u' &&n[i]!=='A' &&n[i]!=='E' &&n[i]!=='I' &&n[i]!=='O' &&n[i]!=='U'){
        arr.push(n[i]);
    }}
console.log(arr.join(""));
});
---------------------------------------------------------------------------------------------

13) Given a number N followed by a list of N numbers. Write a program to reverse the list and print the list.
Input Size : 1 <= N <= 10000
Sample Testcases :
INPUT
7
1 2 3 4 5 6 7
OUTPUT
7->6->5->4->3->2->1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=parseInt(userInput[0]);
  let b=userInput[1].split(" ").map(Number);
  let c=[];
  for(let i=a-1;i>=0;i--){
      c.push(b[i]);
      if(i!==0){
          c.push("->");
      }}
  console.log(c.join(""));
});

---------------------------------------------------------------------------------------------

51) Divide two given integers A and B without using multiplication, division and mod operator. If it is overflow, return MAX_INT.
Sample Testcases :
INPUT
10 5
OUTPUT
2

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let [a,b]=userInput[0].split(" ");
   let count=0;
   while(a>0){
       a-=b;
       count+=1;
   }
   console.log(count);
});

---------------------------------------------------------------------------------------------

58) Given a linked list(where each node has a character)  remove the duplicate character 
and maintain the same order.
Input: H->e->l->l->o->w->o->r->l->d->h->i
Output:  H->e->l->o->w->r->d->h->i

Explanation:
The letters l,o are duplicated so it is mentioned only once in the output.
Note: The characters are case sensitive
//Node structure in C/C++
struct Node

{

    int data;

    struct Node *next;

};

//Node class structure
class LinkedList {
    static Node head;

    static class Node {

        int data;

        Node next;

        Node(int d) {

            data = d;

            next = null;

        }

    }

Input Description:
Characters of a String in linked list format

Output Description:
Characters of a String in linked list format after removing the repeated character

Sample Input :
H->e->l->l->o->w->o->r->l->d->h->i
Sample Output :
 H->e->l->o->w->r->d->h->i

 CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a=userInput[0].split("");
let arr=[];
for(let i=0;i<a.length;i+=3){
    if(!arr.includes(a[i])){
        if(i!==a.length-1){
            arr.push(a[i]);
            arr.push("->");
        }else{
            arr.push(a[i]);
        }}}
  console.log(arr.join(""));
});
 ---------------------------------------------------------------------------------------------