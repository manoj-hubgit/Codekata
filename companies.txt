2) How many possible ways are to shuffle given number of playing cards?.
Input Size : |N| <= 1000000
Sample Testcase :
INPUT
7
OUTPUT
5040

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=parseInt(userInput[0]);
  let num=1;
  for(let i=a;i>1;i--){
      num*=i;
  }
  console.log(num);
});
---------------------------------------------------------------------------------------------

6) Given a number 'N' print the sum of each digit to the power of number of digits in given input.
Example :
Input => 1234
=> ( 1 ^ 4 ) + ( 2 ^ 4 ) + ( 3 ^ 4 ) + ( 4 ^ 4 )
=> 1 + 16 + 81 + 256
Output => 354
N <=100000000000
Sample Testcase :
INPUT
1234
OUTPUT
354

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=userInput[0].split("").map(Number);
  let total=0;
  for(let i=0;i<a.length;i++){
      total+=Math.pow(a[i],a.length);
  }
  console.log(total);
});
---------------------------------------------------------------------------------------------