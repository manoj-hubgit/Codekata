1) Given 2 numbers N,M. Print 'yes' if their product is a perfect square else print 'no'.
Sample Testcase :
INPUT
5 5
OUTPUT
yes

CODE:

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a = userInput[0].split(" ")
  let N=a[0];
  let M=a[1];
  let product=N*M;
  let square=Math.sqrt(product);
  if(Number.isInteger(square)){
      console.log("yes");
  }else{
      console.log("no");
  }
});
---------------------------------------------------------------------------------------------

2) Write a program to print the sum of the first K natural numbers.
Input Size : n <= 100000
Sample Testcase :
INPUT
3
OUTPUT
6

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
 let k=(userInput[0]);
 let val=0;
   for(i=0;i<=k;i++){
       val+=i;
   }
   console.log(val)
});

---------------------------------------------------------------------------------------------

3) Given 3 numbers N , L and R. Print 'yes' if N is between L and R else print 'no'.
Sample Testcase :
INPUT
3
2 6
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
 let n=(userInput[0]);
 let value=userInput[1];
 let values=value.split(" ");
 let l=values[0];
 let r=values[1];
 if(n>l && n<r){
     console.log("yes");
 }
 else{
     console.log("no");
 }
});

---------------------------------------------------------------------------------------------

4) Write a code to get an integer N and print values from 1 till N in a separate line.

Input Description:
A single line contains an integer N.

Output Description:
Print the values from 1 to N in a separate line.

Sample Input :
5
Sample Output :
1
2
3
4
5

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=parseInt(userInput[0]);
  for(let i=1;i<=a;i++){
      console.log(i);
  }
});
---------------------------------------------------------------------------------------------

5) Given 2 numbers N and K followed by elements of N .Print 'yes' if K exists else print 'no'.
Sample Testcase :
INPUT
4 2
1 2 3 3
OUTPUT
yes

CODE:

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {

  let a = userInput[0].split(" ");
  let N=a[0];
  let K=a[1];
  let b = userInput[1].split(" ");
let count =0;
  for(let i=0;i<b.length;i++){
      if(b[i]===K){
          count=1;
          break;
      }
  }
  if(count!==0){
      console.log("yes");
  }else{
      console.log("no");
  }
});
---------------------------------------------------------------------------------------------

6) Write a code to get 2 integers A and N. Print the integer A, N times in separate line.

Input Description:
First line contains an integer A. Second line contains an Integer N.

Output Description:
Print the integer A, N times in a separate line.

Sample Input :
2 3
Sample Output :
2
2
2

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let arr=userInput[0];
   let input=arr.split(" ")
   let a = input[0];
   let n = input[1];
   for(let i=1;i<=n;i++){
       console.log(a);
   } 
});
---------------------------------------------------------------------------------------------

7) Write a code to get the input and print it 5 times.

Input Description:
A single line contains an integer N.

Output Description:
Output contains 5 lines with each line having the value N.

Sample Input :
4
Sample Output :
4
4
4
4
4

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0];
   for(let i=1;i<=5;i++){
       console.log(a);
   } 
});
---------------------------------------------------------------------------------------------

8) Given a range of 2 numbers (i.e) L and R count the number of prime numbers in the range (inclusive of L and R ).
Input Size : L <= R <= 100000(complexity O(n) read about Sieve of Eratosthenes)
Sample Testcase :
INPUT
2 5
OUTPUT
3

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => { 
function primeCheck(val){
      if(val<2){
          return false;
      }
      for(let j=2;j<=Math.sqrt(val);j++){
          if(val%j===0){
              return false;
          }
      }
              return true;
      }
let a=userInput[0].split(" ").map(Number);
let start=a[0];
let end=a[1];
let count=0;
for(let i=start;i<=end;i++){
    if(primeCheck(i)){
        count++;
    }  
}
console.log(count);
});
---------------------------------------------------------------------------------------------

9) Find the minimum among 10 numbers.
Sample Testcase :
INPUT
5 4 3 2 1 7 6 10 8 9
OUTPUT
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0].split(" ");
   let length=a.length;
   let min=a[0];
   for(i=0;i<length;i++){
       if(min>a[i]){
           min=a[i];
       }
   }
   console.log(min);
});
---------------------------------------------------------------------------------------------

10) Write a code to get an integer N and print the even values from 1 till N in a separate line.

Input Description:
A single line contains an integer N.

Output Description:
Print the even values from 1 to N in a separate line.

Sample Input :
6
Sample Output :
2
4
6

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=parseInt(userInput[0]);
  let value=1
  for(let i=1;value!=a;i++){
      console.log(value=i*2);
  }
});
---------------------------------------------------------------------------------------------

11) Write a code to get a integer n as input and calculate the smallest perfect power of 2 greater than n.

Input Description:
A single line containing an integer,n.

Output Description:
Print the smallest perfect power of 2 greater than n.

Sample Input :
48
Sample Output :
64

CODE:

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0];
  let a=1;
  while(a<=n){
      a*=2;
  }
  console.log(a);
});
---------------------------------------------------------------------------------------------

12) Given numbers A,B find A^B.
Input Size : 1 <= A <= 5 <= B <= 50
Sample Testcase :
INPUT
3 4
OUTPUT
81

CODE:

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {

  let a = userInput[0].split(" ");
  let A = a[0];
  let B = a[1];
  console.log(Math.pow(A,B));
});
---------------------------------------------------------------------------------------------

13) Given 2 numbers N and K followed by N elements,print the number of repetition of K otherwise print '-1' if the element not found.
Sample Testcase :
INPUT
6 2
1 2 3 5 7 8
OUTPUT
0

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
    let a = userInput[0].split(" ");
    let len = a[0];
    let check =parseInt(a[1]);
    let b= userInput[1].split(" ").map(Number);
    count= -1;
    for(let i=0;i<len;i++){
        if(b[i]===check){
            count+=1;
        }
    }
    console.log(count);
});
---------------------------------------------------------------------------------------------

14) Given a string 'S' swap the even and odd characters starting from index 1(Assume the index starts from 0).
Input Size : |s| <= 10000000(complexity O(n))
Sample Testcase :
INPUT
codekata
OUTPUT
ocedakat

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => { 
  let s = userInput[0].split("");
  let arr=s
  for(let i=0;i<arr.length-1;i+=2){
    let temp=arr[i];
    arr[i]=arr[i+1];
    arr[i+1]=temp;
  }
  console.log(arr.join(""))
});
---------------------------------------------------------------------------------------------

15) Write a code to get an integer N and print the digits of the integer.

Input Description:
A single line contains an integer N.

Output Description:
Print the digits of the integer in a single line separated by space,

Sample Input :
348
Sample Output :
3 4 8

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0];
  
  let value=a.split("");
  console.log(value.join(" ")); 
});
---------------------------------------------------------------------------------------------

16) Given base(B) and height(H) of a triangle find its area.
Input Size : N <= 1000000
Sample Testcase :
INPUT
2 4
OUTPUT
4

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a= userInput[0].split(" ");
  let b=a[0];
  let h=a[1];
  console.log(1/2*b*h);
});
---------------------------------------------------------------------------------------------

17) Given an array of N elements switch(swap) the element with the adjacent element and print the output.
Sample Testcase :
INPUT
5
3 2 1 2 3
OUTPUT
2 3 2 1 3

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=userInput[0]
  let s = userInput[1].split(" ");
  let arr=s
  for(let i=0;i<a-1;i+=2){
    let temp=arr[i];
    arr[i]=arr[i+1];
    arr[i+1]=temp;
  }
  console.log(arr.join(" "))
});
---------------------------------------------------------------------------------------------

18) Given 3 numbers A,B,C print 'yes' if they can form the sides of a right angled triangle,otherwise 'no'.
Input Size : A,B,C <= 100000
Sample Testcase :
INPUT
3 4 5
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0].split(" ").sort((a,b)=>a-b);
  let a=n[0];
  let b=n[1];
  let c=n[2];
  if(a*a + b*b ===c*c){
      console.log("yes")
  }else{
      console.log("no")
  }
});
---------------------------------------------------------------------------------------------

19) Write a code to get an integer N and print the sum of  values from 1 to N.

Input Description:
A single line contains an integer N.

Output Description:
Print the sum of values from 1 to N.

Sample Input :
10
Sample Output :
55

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0];
   let sum=0
   for(let i=1;i<=a;i++){
       sum+=i;
    
   }
   console.log(sum);
});
---------------------------------------------------------------------------------------------

20) Write a code get an integer number as input and print the sum of the digits.

Input Description:
A single line containing an integer.

Output Description:
Print the sum of the digits of the integer.

Sample Input :
124
Sample Output :
7

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0];
  let value=a.split("");
  let sum=0;
  for(let i=0;i<value.length;i++){
      sum+= parseInt(value[i]);
  }
  console.log(sum);
});
---------------------------------------------------------------------------------------------

21) Given a number N and an array of N elements, find the Bitwise OR of the array elements.
Input Size : N <= 100000
Sample Testcase :
INPUT
2
2 4
OUTPUT
6

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let n=parseInt(userInput[0]);
let s=userInput[1].split(" ").map(Number);
let val=s[0];
for(let i=0;i<n-1;i++){
    val=(val | s[i+1]);
}
console.log(val);
});
---------------------------------------------------------------------------------------------

22) Given 3 numbers A,B,C print 'yes' if they can form the sides of a scalene triangle else print 'no'.
Input Size : A,B,C <= 100000
Sample Testcase :
INPUT
3 4 5
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0].split(" ");
  let a=parseInt(n[0]);
  let b=parseInt(n[1]);
  let c=parseInt(n[2]);
  if((a+b>c)&& (b+c>a) && (c+a>b))
  {
      if(a !==b && b!==c && c!==a){
          console.log("yes")
      }else{
         console.log("no") 
      }
  }
  else{
      console.log("no")
  }
});
---------------------------------------------------------------------------------------------

23)Given 2 numbers N and M add both the numbers and check whether the sum is odd or even.
Sample Testcase :
INPUT
9 2
OUTPUT
odd

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let l=userInput[0].split(" ");

let n=l[0];
let m=l[1];
let a=n+m
if(a%2===0){
    console.log("even");
}
else{
    console.log("odd");
}
});
---------------------------------------------------------------------------------------------

24) Write a code to get 2 integers as input and add the integers without any carry.

Input Description:
A single line containing 2 integers.

Output Description:
Print sum of the 2 integers without carry

Sample Input :
44 66
Sample Output :
0

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let c=userInput[0].split(" ").sort();
  let a = c[0];
  let b = c[1];
  let result='';
  while(a>0 || b>0){
      let sum=(a%10)+(b%10);
      result=sum%10 + result;
      a=Math.floor(a/10);
      b=Math.floor(b/10);
  }
  console.log(parseInt(result,10));
});
---------------------------------------------------------------------------------------------

25)Write a code to get 2 integers as input and find the HCF of the 2 integer without using recursion or Euclidean algorithm.

Input Description:
A single line containing 2 integers separated by space.

Output Description:
Print the HCF of the integers.

Sample Input :
2 3
Sample Output :
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
 let value = userInput[0].split(" ");
 let a = value[0];
 let b = value[1];
 
 function hcf(a,b){
     let smallest=Math.min(a,b);
     let hcf=1;
     for(let i=smallest;i>0;i--){
         if(a%i===0 && b%i===0){
             hcf = i;
             break;
         }
     }
     return hcf;
 }
 console.log(hcf(a,b))

});
---------------------------------------------------------------------------------------------

26)

CODE:

---------------------------------------------------------------------------------------------

27)Write a program to get a string as input and reverse the string without using temporary variable.

Input Description:
A single line containing a string.

Output Description:
Print the reversed string.

Sample Input :
GUVI
Sample Output :
IVUG

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
     let a=(userInput[0]);
     let word=a.split("");
     let len=word.length;
    let rev=[];
    for(let i=0;i<word.length;i++){
        len-=1;
        rev.push(word[len]);
    }
    console.log(rev.join(""));
});
---------------------------------------------------------------------------------------------

28)Write a code to get an integer N and print the values from N to 1.

Input Description:
A single line contains an integer N.

Output Description:
Print the values from N to 1 in a separate line.

Sample Input :
10
Sample Output :
10
9
8
7
6
5
4
3
2
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0];
   for(a;a>0;a--){
       console.log(a);
   }
});
---------------------------------------------------------------------------------------------

29)Given 3 numbers A,B,C process and print 'yes' if they can form the sides of a triangle otherwise print 'no'.
Input Size : A,B,C <= 100000
Sample Testcase :
INPUT
3 4 5
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0].split(" ");
  let a=parseInt(n[0]);
  let b=parseInt(n[1]);
  let c=parseInt(n[2]);
  if((a+b>c)&& (b+c>a) && (c+a>b))
  {
     console.log("yes")
  }else{
     console.log("no")
  }
});
---------------------------------------------------------------------------------------------

30)Given a number N followed by N numbers.Find the smallest number and largest number and print both the indices(1 based indexing).
Input Size : N <= 100000
Sample Testcase :
INPUT
5
1 2 3 4 5
OUTPUT
1 5

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a= userInput[0];
   let b= userInput[1].split(" ");
   small=b[0];
   large=b[0];
   for(let i=1;i<b.length;i++)
   {
       if(small>b[i]){
           small=b[i];
       }
       if(large<b[i]){
           large=b[i];
       }
   }
   console.log(b.indexOf(small)+1, b.indexOf(large)+1);
});
---------------------------------------------------------------------------------------------

31)

CODE:

---------------------------------------------------------------------------------------------

32)

CODE:

---------------------------------------------------------------------------------------------

33)Given a string S consisting of 2 words reverse the order of two words .
Input Size : |S| <= 10000000
Sample Testcase :
INPUT
hello world
OUTPUT
world hello

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let l=userInput[0].split(" ");
let temp;
temp=l[0];
l[0]=l[1];
l[1]=temp;
console.log(l.join(" "));
});
---------------------------------------------------------------------------------------------

34)Write a code get an integer number as input and print the odd and even digits of the number separately.

Input Description:
A single line containing an integer.

Output Description:
Print the even and odd integers of the integer in a separate line.

Sample Input :
1234
Sample Output :
2 4
1 3

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
     let a=(userInput[0]);
     let value=a.split("");
     let odd=[],even=[];
     for(let i=0;i<value.length;i++){
         if(value[i]%2===0){
             even.push(value[i]);
         }
         else if(value[i]%2===1){
             odd.push(value[i]);
         }
     }
console.log(even.sort().join(" "));
console.log(odd.sort().join(" "));
});
---------------------------------------------------------------------------------------------

35) Given a number N and an array of N elements ,find the Bitwise AND of the array elements.
Input Size N <= 100000
Sample Testcase :
INPUT
4
4 3 2 1
OUTPUT
0

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let n=parseInt(userInput[0]);
let a=userInput[1].split(" ").map(Number);
let val=a[0];
for(let i=1;i<n;i++){
    val&=a[i];
}
console.log(val);
});
---------------------------------------------------------------------------------------------

36)

CODE:

---------------------------------------------------------------------------------------------

37)Kabali is a brave warrior who with his group of young ninjas moves from one place to another to fight against his opponents. Before Fighting he just calculates one thing, the difference between his ninja number and the opponent's ninja number. From this difference he decides whether to fight or not. Kabali's ninja number is never greater than his opponent.
Input
The input contains two numbers in every line. These two numbers in each line denotes the number ninjas in Kabali's clan and his opponent's clan . print the absolute difference of number of ninjas between Kabali's clan and his opponent's clan. Each output should be in seperate line.
Sample Testcase :
INPUT
100 200
OUTPUT
100

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0].split(" ");
  let a=n[0];
  let b=n[1];
 console.log(Math.abs(a-b))
});
---------------------------------------------------------------------------------------------

38)Let P represent Paper, R represent Rock and S represent Scissors. Given 2 out of the 3 determine which one wins. If its a draw print 'D'.
Sample Testcase :
INPUT
R P
OUTPUT
P

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a= userInput[0].split(" ");
   let R,P,S;
   if(a[0]===a[1]){
       console.log("D");
   }
   else if(a[0]==='R' && a[1]==='P' || a[0]==='P' && a[1]==='R')
   {
       console.log("P");
   }
    else if(a[0]==='R' && a[1]==='S' || a[0]==='S' && a[1]==='R')
   {
       console.log("R");
   }
    else if(a[0]==='R' && a[1]==='P' || a[0]==='P' && a[1]==='R')
   {
       console.log("P");
   }
    else if(a[0]==='S' && a[1]==='P' || a[0]==='P' && a[1]==='S')
   {
       console.log("S");
   }
});
---------------------------------------------------------------------------------------------

39)

CODE:

---------------------------------------------------------------------------------------------

40)Given a number N, print the Bitwise NOT of that number.
Input Size : 1 <= N <= 10000
Sample Testcase :
INPUT
5
OUTPUT
-6

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0];
  console.log((~n))
});
---------------------------------------------------------------------------------------------

