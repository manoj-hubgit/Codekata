3) Given a number N and an array of N elements, find the maximum of the elements (using Bitwise AND) and print the output.
Input Size N <= 100000
Sample Testcase :
INPUT
4
2 4 4 2
OUTPUT
4

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let n=parseInt(userInput[0]);
let k=userInput[1].split(" ").map(Number);
let a=k[0];
for(let i=1;i<n;i++){
    if(a<k[i]){
    a=k[i];
    }
}
console.log(a);
});
---------------------------------------------------------------------------------------------

4) Given 2 numbers N,K print the number after performing bitwise left shift 'K' times.
Input Size : 1 <= N, K <= 1000
Sample Testcase :
INPUT
5 2
OUTPUT
20

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let [n,k]=userInput[0].split(" ").map(Number);
console.log(n<<k);
});

---------------------------------------------------------------------------------------------

8) Given a number N and an array of N integers, find the maximum of Bitwise OR of all segments.
Input Size : N <= 100000
Sample Testcase :
INPUT
2
2 4
OUTPUT
6

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n=parseInt(userInput[0]);
  let a=userInput[1].split(" ").map(Number);
  let val=a[0];
  for(let i=1;i<n;i++){
      val=val|a[i];
  }
  console.log(val);
});
---------------------------------------------------------------------------------------------

9) Given 2 numbers N and K print the number after performing bitwise right shift 'K' times(upto 2 decimal places).
Input Size : 1 <= N, K <= 1000
Sample Testcase :
INPUT
5 2
OUTPUT
1

CODE:
const readline = require("readline");
const inp = readline.createInterface({
  input: process.stdin
});
const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});
inp.on("close", () => {
  let [n,k]=userInput[0].split(" ").map(Number);
  console.log(n>>k);
});
---------------------------------------------------------------------------------------------