1) 

CODE:

---------------------------------------------------------------------------------------------

4) Given a number N, print yes if the number is a multiple of 7 else print no.
Sample Testcase :
INPUT
49
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0];
 if(a%7===0){
     console.log("yes");
 }else{
     console.log("no");
 }
});
---------------------------------------------------------------------------------------------

10) You are given a task to tell whether the number is pure or not. A pure number is a number whose sum of digits is multiple of 3.

O(1) time and O(1) space

Input Description:
You are given a number n.

Output Description:
Print yes if it is pure else not

Sample Input :
13
Sample Output :
not

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a=userInput[0].split("").map(Number);
let n=0;
for(let i=0;i<a.length;i++){
  n+=a[i];  
}
if(n%3===0){
    console.log("yes");
}else{
    console.log("not");
}
});
---------------------------------------------------------------------------------------------

12) You are given a number ‘n’. You have to tell whether a number is great or not. A great number is a number whose sum of digits let (m) and product of digits let(j) when summed together gives the number back

m+j=n
Input Description:
You are given a number n;

Output Description:
Print Great if a number is great else print the no

Sample Input :
59
Sample Output :
Great

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a = userInput[0].split("");
let val1=parseInt(a[0]);
let val2=parseInt(a[1]);
let add=val1+val2;
let product=val1*val2;
let both=add+product;
if(both==a.join("")){
    console.log("Great");
}else{
    console.log("no")
}
});
---------------------------------------------------------------------------------------------

14) Find the minimum among 10 numbers.
Sample Testcase :
INPUT
5 4 3 2 1 7 6 10 8 9
OUTPUT
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0].split(" ");
   let length=a.length;
   let min=a[0];
   for(i=0;i<length;i++){
       if(min>a[i]){
           min=a[i];
       }
   }
   console.log(min);
});
---------------------------------------------------------------------------------------------

15) Pk finds it difficult to judge the minimum element in the list of elements given to him. Your task is to develop the algorithm in order to find the minimum element.
Note:Don’t use sorting
 

Input Description:
You are given ‘n’ number of elements. Next line contains n space separated numbers.

Output Description:
Print the minimum element

Sample Input :
5
3 4 9 1 6
Sample Output :
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=userInput[0];
  let val=userInput[1].split(" ").map(Number);
  let small=val[0];
  for(let i=1;i<a;i++){
      if(small>val[i]){
          small=val[i];
      }
  }
  console.log(small);
});
---------------------------------------------------------------------------------------------

16) Given 2 numbers N,M. Print 'yes' if their product is a perfect square else print 'no'.
Sample Testcase :
INPUT
5 5
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a = userInput[0].split(" ")
  let N=a[0];
  let M=a[1];
  let product=N*M;
  let square=Math.sqrt(product);
  if(Number.isInteger(square)){
      console.log("yes");
  }else{
      console.log("no");
  }
});
---------------------------------------------------------------------------------------------

17) Given a number N, print 'yes' if it is a multiple of 13 else print 'no'.
Sample Testcase :
INPUT
26
OUTPUT
yes 

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0];
   if(a%13===0){
      console.log("yes");
   }else{
       console.log("no");
   }
});
---------------------------------------------------------------------------------------------

18) 

CODE:

---------------------------------------------------------------------------------------------

19) Given 3 numbers N , L and R. Print 'yes' if N is between L and R else print 'no'.
Sample Testcase :
INPUT
3
2 6
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
 let n=(userInput[0]);
 let value=userInput[1];
 let values=value.split(" ");
 let l=values[0];
 let r=values[1];
 if(n>l && n<r){
     console.log("yes");
 }else{
     console.log("no");
 }
});

---------------------------------------------------------------------------------------------

20) Given 2 numbers N,M. Find their difference and check whether it is even or odd.
Sample Testcase :
INPUT
5 5
OUTPUT
even

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=userInput[0].split(" ");
   a=a[0]-a[1];
  if(a%2===0){
      console.log("even");
  }else{
      console.log("odd");
  }
});
---------------------------------------------------------------------------------------------

24) Count the number of digits of a given number N.Size of the integer ranges from 1Sample Testcases :
INPUT
548
OUTPUT
3

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0].split("");
   console.log(a.length);
});
---------------------------------------------------------------------------------------------

27) Ajay is given a series(In example).he gone through the series but unable to understand it properly,he has hired you.Your task is to understand the series and print the series 2,6,12,20,30... .You are given with a number ‘n’. Find the nth number of series.

Input Description:
You are given a number ‘n’.

Output Description:
Print the nth number of series

Sample Input :
5
Sample Output :
30

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0];
   let increment=0;
   let ans=0
   for(let i=1;i<=a;i++){
       increment+=2;
       ans+=increment;
   }
   console.log(ans);
});
---------------------------------------------------------------------------------------------

29) Given a number N, print the product of the digits.
Input Size : N <= 100000000000
Sample Testcase :
INPUT
2143
OUTPUT
24
CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=userInput[0].split("");
   let sum=a[0];
   for(let i=1;i<a.length;i++){
       sum*=a[i];
   }
   console.log(sum);
});
---------------------------------------------------------------------------------------------

30) Assume that you are ticket verifier at a club. Your club has decided to give a special discount to the person(s) who are satisfying the following condition

Condition:-

If ticket number is divisible by date of month. You are eligible for a discount.

Input Description:
First line contains input ‘n’.Next line contains n space separated numbers denoting ticket numbers .Next line contains ‘k’ date of the month.

Output Description:
Print 1 if the ticket is eligible for discount else 0

Sample Input :
6
112 139 165 175 262 130
22
Sample Output :
0 0 0 0 0 0

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
 let a= userInput[0];
 let b=userInput[1].split(" ");
 let c=userInput[2];
 let arr=[];
 for(let i=0;i<a;i++){
     if(b[i]%c===0){
         arr.push(1);
     }else{
         arr.push(0);
     }
 }
 console.log(arr.join(" "));
});
---------------------------------------------------------------------------------------------

31) Write a program to print the sum of the first K natural numbers.
Input Size : n <= 100000
Sample Testcase :
INPUT
3
OUTPUT
6

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
 let k=(userInput[0]);
 let val=0;
   for(i=0;i<=k;i++){
       val+=i;
   }
   console.log(val)
});

---------------------------------------------------------------------------------------------

32) Kabali is a brave warrior who with his group of young ninjas moves from one place to another to fight against his opponents. Before Fighting he just calculates one thing, the difference between his ninja number and the opponent's ninja number. From this difference he decides whether to fight or not. Kabali's ninja number is never greater than his opponent.
Input
The input contains two numbers in every line. These two numbers in each line denotes the number ninjas in Kabali's clan and his opponent's clan . print the absolute difference of number of ninjas between Kabali's clan and his opponent's clan. Each output should be in seperate line.
Sample Testcase :
INPUT
100 200
OUTPUT
100 

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0].split(" ");
  let a=n[0];
  let b=n[1];
 console.log(Math.abs(a-b))
});
---------------------------------------------------------------------------------------------

39) Given a number N, print the odd digits in the number(space seperated) or print -1 if there is no odd digit in the given number.
Input Size : N <= 100000
Sample Testcase :
INPUT
2143
OUTPUT
1 3

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0].split("");
   let odd=[];
   for(let i=0;i<a.length;i++){
    if(a[i]%2===1){
        odd.push(a[i]);
    }   
   }
if(odd.length===0){
    console.log("-1");
}
 console.log(odd.join(" "));
});
---------------------------------------------------------------------------------------------

40) Given 3 numbers a,b,c print a*b mod c.
Sample Testcase :
INPUT
5 3 2
OUTPUT
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a=userInput[0].split(" ");
   let b=a[0];
   let c=a[1];
   let d=a[2];
   console.log((b*c)%d);
});

---------------------------------------------------------------------------------------------

41) Given the values of a,b and x in the equation ax + b = y. Find the value of y.
Sample Testcase :
INPUT
3 5 2
OUTPUT
11

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
 let d=userInput[0].split(" ");
 let a= parseInt(d[0]);
 let b= parseInt(d[1]);
 let x= parseInt(d[2]);
 console.log((a*x)+b);
});
---------------------------------------------------------------------------------------------

44) Given base(B) and height(H) of a triangle find its area.
Input Size : N <= 1000000
Sample Testcase :
INPUT
2 4
OUTPUT
4

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a= userInput[0].split(" ");
  let b=a[0];
  let h=a[1];
  console.log(1/2*b*h);
});
---------------------------------------------------------------------------------------------

46) Given a range of 2 numbers (i.e) L and R count the number of prime numbers in the range (inclusive of L and R ).
Input Size : L <= R <= 100000(complexity O(n) read about Sieve of Eratosthenes)
Sample Testcase :
INPUT
2 5
OUTPUT
3

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
function primeCheck(val){
      if(val<2){
          return false;
      }
      for(let j=2;j<=Math.sqrt(val);j++){
          if(val%j===0){
              return false;
          }
      }
              return true;
      }
let a=userInput[0].split(" ").map(Number);
let start=a[0];
let end=a[1];
let count=0;
for(let i=start;i<=end;i++){
    if(primeCheck(i)){
        count++;
    }
    
}
console.log(count);
});
---------------------------------------------------------------------------------------------

47) Given a floating point number with 1 decimal place round it off to nearest greater integer and print it.
Sample Testcase :
INPUT
2.6
OUTPUT
3

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a=userInput[0];
console.log(Math.ceil(a));
});
---------------------------------------------------------------------------------------------

48) Given numbers A,B find A^B.
Input Size : 1 <= A <= 5 <= B <= 50
Sample Testcase :
INPUT
3 4
OUTPUT
81

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a = userInput[0].split(" ");
  let A = a[0];
  let B = a[1];
  console.log(Math.pow(A,B));
});
---------------------------------------------------------------------------------------------

49) You are given given task is to print whether array is ‘majestic’ or not.A ‘majsetic’ array is an array whose sum of first three number is equal to last three number.

Input Description:
You are given a number ‘n’,Next line contains ‘n’ space separated

Output Description:
Print 1 if array is majestic and 0 if it is not

Sample Input :
7
1 2 3 4 6 0 0
Sample Output :
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n=userInput[0];
let a=userInput[1].split(" ").map(Number);

let last=a[n-1]+a[n-2]+a[n-3];
let first=a[0]+a[1]+a[2];
if(first===last){
    console.log(1);
}else{
    console.log(0);
}
});
---------------------------------------------------------------------------------------------

51) Given 2 numbers N and M add both the numbers and check whether the sum is odd or even.
Sample Testcase :
INPUT
9 2
OUTPUT
odd

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let l=userInput[0].split(" ");

let n=l[0];
let m=l[1];
let a=n+m
if(a%2===0){
    console.log("even");
}else{
    console.log("odd");
}
});
---------------------------------------------------------------------------------------------

53) Given 2 numbers N and K followed by N elements,print the number of repetition of K otherwise print '-1' if the element not found.
Sample Testcase :
INPUT
6 2
1 2 3 5 7 8
OUTPUT
0

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
    let a = userInput[0].split(" ");
    let len = a[0];
    let check =parseInt(a[1]);
    let b= userInput[1].split(" ").map(Number);
    count= -1;
    for(let i=0;i<len;i++){
        if(b[i]===check){
            count+=1;
        }
    }
    console.log(count);
});

---------------------------------------------------------------------------------------------
54) Prateek finds it difficult to judge the minimum element in the list of elements given to him. Your task is to develop the algorithm in order to find the minimum element.

Input Description:
You are given ‘n’ number of elements. Next line contains n space separated numbers.

Output Description:
Print the minimum element

Sample Input :
5
3 4 9 1 6
Sample Output :
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
    let total=userInput[0];
let a = userInput[1].split(" ").sort();
console.log(a[0]);

});
---------------------------------------------------------------------------------------------

62) Given a number N, print its reverse.
Input Size : n <= 1000
Sample Testcase :
INPUT
10
OUTPUT
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let a=userInput[0].split("").reverse().join("");
  console.log(parseInt(a));
});
---------------------------------------------------------------------------------------------

78) Given an array of N elements switch(swap) the element with the adjacent element and print the output.
Sample Testcase :
INPUT
5
3 2 1 2 3
OUTPUT
2 3 2 1 3

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let a=userInput[0]
  let s = userInput[1].split(" ");
  let arr=s
  for(let i=0;i<a-1;i+=2){
    let temp=arr[i];
    arr[i]=arr[i+1];
    arr[i+1]=temp;
  }
  console.log(arr.join(" "))
});
---------------------------------------------------------------------------------------------

79) A number is given as input.Find the maximum number that can be formed using the digits.
Input Size : N <= 10000000
Sample Testcase :
INPUT
4123
OUTPUT
4321

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
let n=userInput[0].split("").sort((a,b)=>(b-a)).join("");
console.log(n);
});
---------------------------------------------------------------------------------------------

80) Given 3 numbers A,B,C process and print 'yes' if they can form the sides of a triangle otherwise print 'no'.
Input Size : A,B,C <= 100000
Sample Testcase :
INPUT
3 4 5
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0].split(" ");
  let a=parseInt(n[0]);
  let b=parseInt(n[1]);
  let c=parseInt(n[2]);
  if((a+b>c)&& (b+c>a) && (c+a>b))
  {
     console.log("yes")
  }else{
     console.log("no")
  }
});
---------------------------------------------------------------------------------------------

82) Given 3 numbers A,B,C print 'yes' if they can form the sides of a scalene triangle else print 'no'.
Input Size : A,B,C <= 100000
Sample Testcase :
INPUT
3 4 5
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0].split(" ");
  let a=parseInt(n[0]);
  let b=parseInt(n[1]);
  let c=parseInt(n[2]);
  if((a+b>c)&& (b+c>a) && (c+a>b))
  {
      if(a !==b && b!==c && c!==a){
          console.log("yes")
      }else{
         console.log("no") 
      }
  }else{
      console.log("no")
  }
});
---------------------------------------------------------------------------------------------

86) Given 3 numbers A,B,C print 'yes' if they can form the sides of a right angled triangle,otherwise 'no'.
Input Size : A,B,C <= 100000
Sample Testcase :
INPUT
3 4 5
OUTPUT
yes

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n= userInput[0].split(" ").sort((a,b)=>a-b);
  let a=n[0];
  let b=n[1];
  let c=n[2];
  if(a*a + b*b ===c*c){
      console.log("yes")
  }else{
      console.log("no")
  }
});
---------------------------------------------------------------------------------------------

140) Given a number N print the right-angled triangle with the top level having N 1's followed by each level with is one 1 lesser.
Input Size : N <= 1000
Sample Testcase :
INPUT
3
OUTPUT
1 1 1
1 1
1

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
   let a= userInput[0];
   let arr=[];
   let b=a;
   for(let i=0;i<a;i++){
       for(let j=0;j<b;j++){
           arr.push(1);
       }
       console.log(arr.join(" "));
       arr=[];
       b-=1;
   }
});
---------------------------------------------------------------------------------------------

141) Rampal is a number in which the sum of last two digits of that number is multiple of 4.Your teacher has given you the task to make a list of rampal numbers.Your task is to tell whether the number is rampal or not.

 

Note : if the number is negative than rampal is a number which has sum of first and last digit as multiple of 4  

Input Description:
First line contains an input n

Output Description:
Print yes or no

Sample Input :
20

Sample Output :
no

CODE:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  let n=userInput[0]
    let a = n.split("");
    if(n>=0){
    let num1= parseInt(a[a.length-1]);
    let num2=parseInt(a[a.length-2]);
        if((num1+num2) % 4 ===0){
        console.log("yes");
    }else{
        console.log("no");
    }
    }else{
        let num1=parseInt(a[1]);
    let num2=parseInt(a[a.length-1]);
     if((num1+num2) % 4 ===0){
        console.log("yes");
    }else{
        console.log("no");
    }
    }
});
---------------------------------------------------------------------------------------------